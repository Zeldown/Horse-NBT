import groovy.swing.SwingBuilder

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url = 'https://maven.minecraftforge.net' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

/* Utils */
version = "1.0.0"
group = "be.zeldown.horsenbt"
archivesBaseName = "horsenbt"

task updateVersion() {
    project.version = "1.0.0"
}

build.dependsOn updateVersion

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                horsenbt {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                horsenbt {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'

            args '--mod', 'horsenbt', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                horsenbt {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "horsenbt",
            "Specification-Vendor": "horsenbtsareus",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"horsenbtsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar') 

/* Scripts */
task installLocalGitHook(type: Copy){
	from new File(rootProject.rootDir, 'scripts/pre-push')
	into new File(rootProject.rootDir, '.git/hooks')
	
	fileMode 0775
}

build.dependsOn installLocalGitHook

/* Credentials */
def getRepositoryUser() {
    if (System.getenv('MAVEN_REPO_PASS') != null) {
        return System.getenv('MAVEN_REPO_PASS')
    } else {
        return project.findProperty('username')
    }

    return ""
}

def getRepositoryPassword() {
    if (System.getenv('MAVEN_REPO_PASS') != null) {
        return System.getenv('MAVEN_REPO_PASS')
    } else {
        return project.findProperty('password')
    }

    return ""
}
